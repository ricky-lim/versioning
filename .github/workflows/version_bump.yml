name: Version Bump

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  bump-version:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install bump-my-version
        run: pip install bump-my-version

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git pull origin main

      - name: Determine version bump type
        id: bump-type
        run: |
          PR_BRANCH="${{ github.event.pull_request.head.ref }}"
          if [[ $PR_BRANCH == bugfix/* ]]; then
            echo "bump=patch" >> $GITHUB_OUTPUT
          elif [[ $PR_BRANCH == feature/* ]]; then
            echo "bump=minor" >> $GITHUB_OUTPUT
          elif [[ $PR_BRANCH == release/* ]]; then
            echo "bump=major" >> $GITHUB_OUTPUT
          fi

      - name: Bump version and update CHANGELOG.md
        if: steps.bump-type.outputs.bump != ''
        run: |
          # Ensure CHANGELOG is ready
          if ! grep -q "## NEXT" CHANGELOG.md; then
            echo "ERROR: CHANGELOG.md must contain '## NEXT' section"
            exit 1
          fi

          # Check if there are changes under NEXT
          NEXT_SECTION=$(sed -n '/## NEXT/,/##/p' CHANGELOG.md | grep -v "## NEXT" | grep -v "##" | tr -d '\n' | tr -d ' ')
          if [ -z "$NEXT_SECTION" ]; then
            echo "ERROR: No changes documented under ## NEXT in CHANGELOG.md"
            exit 1

          # Bump the version
          bump-my-version bump ${{ steps.bump-type.outputs.bump }}

          NEW_VERSION=$(grep 'version = ' pyproject.toml | cut -d'"' -f2)
          DATE=$(date +%Y-%m-%d)
          # Replace NEXT with version and date
          sed -i.bak "s/## NEXT/## [$NEW_VERSION] - $DATE/" CHANGELOG.md
          rm CHANGELOG.md.bak
          git add CHANGELOG.md
          git commit -m "Update CHANGELOG.md for version $NEW_VERSION"

      - name: Push changes
        if: steps.bump-type.outputs.bump != ''
        run: |
          git push origin main
          git push --tags
